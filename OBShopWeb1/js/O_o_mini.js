(function (window) { function docReady(e) { if (documentRoot.readyState === "complete") { elementExpand(documentRoot, function (e) { if (e.focus) { var t = e.focus; e.focus = function () { window.currentFocus = e; return t.apply(this) } } }); var t = this; e() } else { setTimeout(docReady, 1, e) } } (function (e) { window.setTimeout = e(window.setTimeout); window.setInterval = e(window.setInterval) })(function (originalFn) { return function (code, delay) { var args = Array.prototype.slice.call(arguments, 2); return originalFn(function () { if (typeof code == "string") { eval(code) } else { code.apply(this, args) } }, delay) } }); var _O_o = window.O_o, currentFocus = [], jEZ = function (e) { return new jEZ.prototype.init(e) }, documentRoot = window.document, find = function (e) { var t; if (typeof e === "string") { var n = [], r = e.split(" "); for (var i = j = 0; i < r.length; i++, j++) { if (r[i] === "") { j--; continue } else { n[j] = r[i] } } for (var i = 0; i < n.length; i++) { if (i === 0) { t = elementSeek(n[i], documentRoot) } else { t = elementSeek(n[i], t) } } } else { t = elementSeek(e, documentRoot) } return t }, elementCreate = function (e) { var t = documentRoot.createElement(e); t.noSeek = true; return t }, elementSeek = function (e, t) { var n = rquickExpr.exec(e); var r; if (typeof e === "string") { if (n[1]) { if (t === documentRoot) return documentRoot.getElementById(n[1]); else if (t.length > 0) { for (var i = 0; i < t.length; i++) { if (t[i].id === n[1]) { return t[i] } } } else { if (t.id === n[1]) { return t } } } else if (n[2]) { if (t.length > 0) { for (var i = 0; i < t.length; i++) { r = t[i].getElementsByTagName(n[2]) } } else { r = t.getElementsByTagName(n[2]) } if (r && r.length) { var s = []; for (var i = 0; i < r.length; i++) { if (!r[i].noSeek) s[s.length] = r[i] } r = s } return r } else if (n[3]) { if (t.length > 0) { for (var i = 0; i < t.length; i++) { r = t[i].getElementsByClassName(n[3]) } } else { r = t.getElementsByClassName(n[3]) } if (r && r.length) { var s = []; for (var i = 0; i < r.length; i++) { if (!r[i].noSeek) s[s.length] = r[i] } r = s } return r } if (t.length > 0) { for (var i = 0; i < t.length; i++) { for (var o = 0; i < t[i].childNodes.length; o++) { if (t[i].childNodes[o].nodeType === 3 || t[i].childNodes[o].noSeek) { continue } r = elementSeek(e, t[i].childNodes[o]); if (r) { break } } if (r) { break } } return r } else { for (var u = 0; u < t.childNodes.length; u++) { if (t.childNodes[u].nodeType === 3 || t.childNodes[u].noSeek) { continue } r = elementSeek(e, t.childNodes[u]); if (r) { break } } return r } } else { return e } return undefined }, elementExpand = function (e, t) { if (!t) { return } t(e); if (!e.childNodes) { return } for (var n = 0; n < e.childNodes.length; n++) { elementExpand(e.childNodes[n], t) } }, messagebox = function (e, t, n, r, i, s) { var o = elementCreate("div"); o.style.backgroundColor = "#ffffff"; o.style.border = "thin solid #000000"; o.style.position = "absolute"; if (i === undefined || i === null || i === "") { o.style.width = "300px" } else { o.style.width = i } o.style.marginLeft = o.style.width.replace("px", "") / 2 * -1 + "px"; if (s === undefined || s === null || s === "") { o.style.height = "" } else { o.style.height = s } if (n === undefined || n === null || n === "") { o.style.top = "40%" } else { o.style.top = n } if (r === undefined || r === null || r === "") { o.style.left = "50%" } else { o.style.left = r } o.style.zIndex = "99"; document.body.insertBefore(o, document.body.firstChild); var u = elementCreate("div"); u.style.top = "0"; u.style.left = "0"; u.style.width = "100%"; u.style.height = "100%"; document.body.style.height = "98%"; u.style.position = "absolute"; u.style.backgroundColor = "#000000"; u.style.zIndex = "99"; u.style.filter = "alpha(opacity=50)"; u.style.opacity = "0.5"; document.body.insertBefore(u, document.body.firstChild); var a = elementCreate("div"); a.style.backgroundColor = "#3a4f63"; a.style.height = "20px"; o.appendChild(a); if (t !== undefined) { var f = elementCreate("div"); f.style.padding = "5px"; a.appendChild(f); var l = elementCreate("font"); l.style.fontSize = "12px"; l.style.color = "#ffffff"; f.appendChild(l); var c = document.createTextNode(t); l.appendChild(c) } var h = elementCreate("div"); o.appendChild(h); var p = elementCreate("div"); p.style.padding = "15px 10px 5px 10px"; h.appendChild(p); var d = elementCreate("center"); p.appendChild(d); var v = elementCreate("font"); v.style.fontSize = "12px"; v.style.color = "#000000"; d.appendChild(v); var m = document.createTextNode(e); v.appendChild(m); var g = elementCreate("div"); g.style.padding = "10px"; h.appendChild(g); var y = elementCreate("center"); g.appendChild(y); var b = elementCreate("input"); b.type = "button"; b.value = "Close"; b.onclick = function () { o.parentNode.removeChild(o); u.parentNode.removeChild(u); if (currentFocus.length > 1) { currentFocus.splice(currentFocus.indexOf(this), 1); currentFocus[0].focus() } }; y.appendChild(b); if (currentFocus.length === 0 || !currentFocus[0].noSeek) { b.focus() } currentFocus[currentFocus.length] = b }, createListBoxItem = function (e) { var t = elementCreate("div"); var n = document.createTextNode(e); t.appendChild(n); t.onmouseover = function () { t.style.backgroundColor = "#bbbbbb" }; t.onmouseout = function () { t.style.backgroundColor = "#ffffff" }; return t }, createListBox = function (e) { var t = elementCreate("div"); t.AddListBoxItem = function (n) { this.appendChild(n); n.onclick = function () { if (e !== undefined) { e.value = this.innerText; clear(t); t.style.display = "none" } } }; return t }, clear = function (e) { while (e.hasChildNodes()) { e.removeChild(e.lastChild) } }, JsonParse = function (jsonStr) { return eval("(" + jsonStr + ")") }, getJsonData = function (url, callback) { var httpR = null; if (window.XMLHttpRequest) { httpR = new XMLHttpRequest } else { httpR = new ActiveXObject("Microsoft.XMLHTTP") } var evnt = function () { if (httpR.readyState > 3) { var data = ""; if (httpR.response !== undefined && httpR.response !== '[""]') { data = JsonParse(httpR.response) } else if (httpR.responseText !== '[""]') { data = eval("(" + httpR.responseText + ")") } if (data !== undefined) { callback(data) } } }; httpR.open("GET", url, false); httpR.onreadystatechange = evnt; httpR.send() }, version = "01305.02.1117", rhtmlTag = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/; jEZ.fn = jEZ.prototype = { constructor: jEZ, init: function (e) { if (!e) return this; var t = find(e); if (t && !t.length) { this.context = this[0] = t; this.length = 1; return this } for (var n = 0; n < t.length; n++) this[n] = t[n]; this.context = documentRoot; this.length = t.length; return this }, add: function (e) { if (e.context) { this.context.appendChild(e.context) } else this.context.appendChild(e) }, autocomplete: function (e) { var t = createListBox(this[0]); t.style.backgroundColor = "#ffffff"; t.style.padding = "5px 3px"; t.style.border = "thin solid #000000"; t.style.position = "absolute"; t.style.width = "150px"; t.style.zIndex = "99"; t.style.display = "none"; t.style.left = this[0].offsetLeft + "px"; var n = this[0].parentNode; if (n.lastChild === this[0]) { n.appendChild(t) } else { n.insertBefore(t, this[0].nextSibling) } this[0].onkeyup = function (n) { n = n ? n : window.event ? window.event : ""; var r = n.keyCode ? n.keyCode : n.which; t.style.display = "none"; clear(t); if (r === 27) { return } var i = this.value; if (i !== "") { var s = e + "?key=" + i; getJsonData(s, function (e) { if (e.length > 0) { t.style.display = ""; for (var n = 0; n < e.length; n++) { t.AddListBoxItem(createListBoxItem(e[n])) } } }) } } }, watermask: function (e) { if (this.context === documentRoot) { return } var t = this.context.style.color; if (this.context.value === "") { this.context.value = e; this.context.style.color = "#999999" } this.context.onfocus = function () { if (this.value === e) { this.value = ""; this.style.color = t } }; this.context.onblur = function () { if (this.value === "") { this.value = e; this.style.color = "#999999" } } }, showitem: function (e, t, n, r, i) { if (this.context === documentRoot) { return } var s = elementCreate("div"); s.style.backgroundColor = "#ffffff"; s.style.border = "thin solid #000000"; s.style.position = "absolute"; if (r === undefined || r === null || r === "") { s.style.width = "300px" } else { s.style.width = r } s.style.marginLeft = s.style.width.replace("px", "") / 2 * -1; if (i === undefined || i === null || i === "") { s.style.height = "" } else { s.style.height = i } if (t === undefined || t === null || t === "") { s.style.top = "40%" } else { s.style.top = t } if (n === undefined || n === null || n === "") { s.style.left = "50%" } else { s.style.left = n } s.style.zIndex = "99"; document.body.insertBefore(s, document.body.firstChild); var o = elementCreate("div"); o.style.top = "0"; o.style.left = "0"; o.style.width = "100%"; o.style.height = "100%"; document.body.style.height = "98%"; o.style.position = "absolute"; o.style.backgroundColor = "#000000"; o.style.zIndex = "99"; o.style.filter = "alpha(opacity=50)"; o.style.opacity = "0.5"; document.body.insertBefore(o, document.body.firstChild); var u = elementCreate("div"); u.style.backgroundColor = "#3a4f63"; u.style.height = "20px"; s.appendChild(u); if (e !== undefined) { var a = elementCreate("div"); a.style.padding = "5px"; u.appendChild(a); var f = elementCreate("font"); f.style.fontSize = "12px"; f.style.color = "#ffffff"; a.appendChild(f); var l = document.createTextNode(e); f.appendChild(l) } var c = elementCreate("div"); s.appendChild(c); var h = elementCreate("div"); h.style.padding = "15px 10px 0px 10px"; c.appendChild(h); var p = elementCreate("center"); h.appendChild(p); p.appendChild(this.context); var d = elementCreate("div"); d.style.padding = "10px"; c.appendChild(d); var v = elementCreate("center"); d.appendChild(v); var m = elementCreate("input"); m.type = "button"; m.value = "Close"; m.onclick = function () { s.parentNode.removeChild(s); o.parentNode.removeChild(o); if (currentFocus.length > 1) { currentFocus.splice(currentFocus.indexOf(this), 1); currentFocus[0].focus() } }; v.appendChild(m); if (currentFocus.length === 0 || !currentFocus[0].noSeek) { m.focus() } currentFocus[currentFocus.length] = m } }; jEZ.messagebox = function (e, t, n, r, i, s) { messagebox(e, t, n, r, i, s) }; jEZ.onReady = function (e) { docReady(e) }; jEZ.getJsonData = function (e, t) { getJsonData(e, t) }; jEZ.jsonParse = function (e) { return JsonParse(e) }; String.prototype.trim = function () { return this.replace(/^\s+|\s+$/g, "") }; String.prototype.ltrim = function () { return this.replace(/^\s+/, "") }; String.prototype.rtrim = function () { return this.replace(/\s+$/, "") }; String.prototype.fulltrim = function () { return this.replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g, "").replace(/\s+/g, " ") }; jEZ.fn.init.prototype = jEZ.fn; window.O_o = jEZ })(window)