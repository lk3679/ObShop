//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18444
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OBShopWeb.PosPrintBarcode {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintResult", Namespace="http://schemas.datacontract.org/2004/07/OrangeBear.IO.Printer.BarcodePrinter")]
    public enum PrintResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrinterError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrinterErrorPath = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IISException = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClinetIsNull = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoData = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPsException = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Server", Namespace="http://schemas.datacontract.org/2004/07/OrangeBear.IO.Printer.BarcodePrinter")]
    [System.SerializableAttribute()]
    public partial class Server : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OBShopWeb.PosPrintBarcode.PrinterObj> PrintersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OBShopWeb.PosPrintBarcode.PrinterObj> Printers {
            get {
                return this.PrintersField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintersField, value) != true)) {
                    this.PrintersField = value;
                    this.RaisePropertyChanged("Printers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerID {
            get {
                return this.ServerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIDField, value) != true)) {
                    this.ServerIDField = value;
                    this.RaisePropertyChanged("ServerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterObj", Namespace="http://schemas.datacontract.org/2004/07/OrangeBear.IO.Printer.BarcodePrinter")]
    [System.SerializableAttribute()]
    public partial struct PrinterObj : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Printer {
            get {
                return this.PrinterField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterField, value) != true)) {
                    this.PrinterField = value;
                    this.RaisePropertyChanged("Printer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrinterID {
            get {
                return this.PrinterIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterIDField, value) != true)) {
                    this.PrinterIDField = value;
                    this.RaisePropertyChanged("PrinterID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PosPrintBarcode.IRegister", CallbackContract=typeof(OBShopWeb.PosPrintBarcode.IRegisterCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IRegister {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRegister/HeartBeat")]
        void HeartBeat();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRegister/Register")]
        void Register();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRegister/RegisterStatus")]
        void RegisterStatus(int status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRegister/UnRegister")]
        void UnRegister();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegisterCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/CallBackPrint", ReplyAction="http://tempuri.org/IRegister/CallBackPrintResponse")]
        bool CallBackPrint(string printerId, System.Collections.Generic.List<string> content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/CallBackPrintSingle", ReplyAction="http://tempuri.org/IRegister/CallBackPrintSingleResponse")]
        bool CallBackPrintSingle(string printerId, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/CallBackPrintPick", ReplyAction="http://tempuri.org/IRegister/CallBackPrintPickResponse")]
        OBShopWeb.PosPrintBarcode.PrintResult CallBackPrintPick(string printerId, string path);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRegister/CallBackHearBeat")]
        void CallBackHearBeat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/get_Server", ReplyAction="http://tempuri.org/IRegister/get_ServerResponse")]
        OBShopWeb.PosPrintBarcode.Server get_Server();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/set_Server", ReplyAction="http://tempuri.org/IRegister/set_ServerResponse")]
        void set_Server(OBShopWeb.PosPrintBarcode.Server value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegisterChannel : OBShopWeb.PosPrintBarcode.IRegister, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterClient : System.ServiceModel.DuplexClientBase<OBShopWeb.PosPrintBarcode.IRegister>, OBShopWeb.PosPrintBarcode.IRegister {
        
        public RegisterClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public RegisterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public RegisterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RegisterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RegisterClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void HeartBeat() {
            base.Channel.HeartBeat();
        }
        
        public void Register() {
            base.Channel.Register();
        }
        
        public void RegisterStatus(int status) {
            base.Channel.RegisterStatus(status);
        }
        
        public void UnRegister() {
            base.Channel.UnRegister();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PosPrintBarcode.IPrint")]
    public interface IPrint {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrint/GetPrinterIDs", ReplyAction="http://tempuri.org/IPrint/GetPrinterIDsResponse")]
        System.Collections.Generic.List<string> GetPrinterIDs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrint/CheckService", ReplyAction="http://tempuri.org/IPrint/CheckServiceResponse")]
        System.Collections.Generic.List<string> CheckService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrint/Print", ReplyAction="http://tempuri.org/IPrint/PrintResponse")]
        bool Print(string printerId, System.Collections.Generic.List<string> content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrint/PrintSingle", ReplyAction="http://tempuri.org/IPrint/PrintSingleResponse")]
        bool PrintSingle(string printerId, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrint/PrintPick", ReplyAction="http://tempuri.org/IPrint/PrintPickResponse")]
        OBShopWeb.PosPrintBarcode.PrintResult PrintPick(string printerId, string path);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrintChannel : OBShopWeb.PosPrintBarcode.IPrint, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintClient : System.ServiceModel.ClientBase<OBShopWeb.PosPrintBarcode.IPrint>, OBShopWeb.PosPrintBarcode.IPrint {
        
        public PrintClient() {
        }
        
        public PrintClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrintClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> GetPrinterIDs() {
            return base.Channel.GetPrinterIDs();
        }
        
        public System.Collections.Generic.List<string> CheckService() {
            return base.Channel.CheckService();
        }
        
        public bool Print(string printerId, System.Collections.Generic.List<string> content) {
            return base.Channel.Print(printerId, content);
        }
        
        public bool PrintSingle(string printerId, string content) {
            return base.Channel.PrintSingle(printerId, content);
        }
        
        public OBShopWeb.PosPrintBarcode.PrintResult PrintPick(string printerId, string path) {
            return base.Channel.PrintPick(printerId, path);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PosPrintBarcode.IManager")]
    public interface IManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/Kick", ReplyAction="http://tempuri.org/IManager/KickResponse")]
        void Kick(string address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerChannel : OBShopWeb.PosPrintBarcode.IManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerClient : System.ServiceModel.ClientBase<OBShopWeb.PosPrintBarcode.IManager>, OBShopWeb.PosPrintBarcode.IManager {
        
        public ManagerClient() {
        }
        
        public ManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Kick(string address) {
            base.Channel.Kick(address);
        }
    }
}
